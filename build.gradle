plugins {
    id 'application'
    id 'org.springframework.boot' version '2.1.2.RELEASE'
    id 'io.spring.dependency-management' version '1.0.5.RELEASE'
    id 'org.owasp.dependencycheck' version '3.1.2'
    id "com.gorylenko.gradle-git-properties" version "1.4.21"
    id "org.sonarqube" version "2.6.2"
    id 'jacoco'
}

allprojects {
    apply plugin: 'maven'
    apply plugin: 'io.spring.dependency-management'

    group = 'uk.gov.hmcts.reform.bar'
    ext {
        buildNumber = System.getenv("BUILD_NUMBER") ?: '0'
    }
    version = rootProject.file('version.txt').text.trim() + ".${buildNumber}"

    repositories {
        mavenLocal()

        maven { url "https://dl.bintray.com/hmcts/hmcts-maven" }

        maven {
            url 'https://repo.spring.io/libs-milestone'
        }
        maven { url "http://artifactory.reform.hmcts.net/artifactory/libs-release" }
        jcenter()

    }

    dependencyManagement {
        imports {
            mavenBom 'org.springframework.boot:spring-boot-starter:2.1.2.RELEASE'
        }

        dependencies {

            dependency 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.8.8'
            dependency 'com.google.guava:guava:27.0-jre'

            dependency 'org.liquibase:liquibase-core:3.6.2'
            dependency 'org.postgresql:postgresql:42.2.2'

            dependency 'io.springfox:springfox-swagger2:2.9.2'
            dependency 'io.springfox:springfox-swagger-ui:2.9.2'
            dependency 'commons-beanutils:commons-beanutils:1.9.3'
            dependency 'org.hibernate:hibernate-validator:6.0.9.Final'
        }
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'jacoco'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    project(":bar-client") {
        sonarqube {
            skipProject = true
        }
    }

    test {
        finalizedBy jacocoTestReport
        jacoco {
            append = true
            destinationFile = file("${project.rootDir}/build/jacoco/test.exec")
        }
    }

    jacocoTestReport {
        executionData(test)
        reports {
            xml.enabled true
            html.enabled true
        }
    }

    dependencies {

        compile (group: 'uk.gov.hmcts.reform.auth', name: 'auth-checker-lib', version: '2.1.2') {
            exclude(module: 'java-logging-spring')
        }
        compileOnly 'org.projectlombok:lombok:1.16.16'
        compileOnly 'com.google.code.findbugs:annotations:3.0.1'

        testCompile 'junit:junit:4.12'
        testCompile 'org.assertj:assertj-core:3.8.0'
        testCompile 'com.tngtech.java:junit-dataprovider:1.13.1'

    }
}

dependencies {
    compile project(':bar-api')
}

jar {
    enabled = true
}

bootJar  {
    archiveName 'bar-app.jar'
    manifest {
        attributes 'Implementation-Title': project.name, 'Implementation-Version': project.version
    }
}

springBoot {
    mainClassName = 'uk.gov.hmcts.bar.api.BarServiceApplication'
    buildInfo()
}

dependencyCheck {
    failBuildOnCVSS = 0
    suppressionFile = 'dependency-check-suppressions.xml'
}

def sonarExclusions = [
        '**/**/data/model/*.java',
        '**/BarServiceApplication.java',
        '**/Error.java',
        '**/ResourceNotFoundException.java',
        '**/*Configuration.java',
        '**/BaseRepository.java',
        '**/*Exception.java'
]

sonarqube {
    properties {
        property "sonar.host.url", "https://sonar.reform.hmcts.net/"
        property "sonar.dynamicAnalysis", "reuseReports"
        property "sonar.java.coveragePlugin", "jacoco"
        property "sonar.jacoco.reportPaths", "${project.buildDir}/jacoco/test.exec"
        property "sonar.dependencyCheck.reportPath", "${project.buildDir}/reports/dependency-check-report.xml"
        property "sonar.exclusions", sonarExclusions.join(", ")
        property "sonar.test.exclusions", sonarExclusions.join(", ")
        property "sonar.coverage.exclusions", sonarExclusions.join(", ")
    }
}

task smoke(type: GradleBuild, description: 'Runs smoke tests', group: 'Verification') {
    buildFile = './api/build.gradle'
    tasks = ['smokeTest']
}

task functional(type: GradleBuild, description: 'Runs Functional tests', group: 'Verification') {
    buildFile = './api/build.gradle'
    tasks = ['functionalTest']
}

task printVersion {
    description 'Prints the version of this project'
    doLast {
        print project.version
    }
}

run {
    def debug = System.getProperty("debug")
    if (debug == 'true') {
        jvmArgs = ['-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5005']
    }
}

mainClassName = 'uk.gov.hmcts.bar.api.BarServiceApplication'
