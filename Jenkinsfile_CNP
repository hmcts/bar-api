#!groovy

properties(
    [[$class: 'GithubProjectProperty', projectUrlStr: 'https://github.com/hmcts/bar-app.git'],
     pipelineTriggers([[$class: 'GitHubPushTrigger']])]
)

@Library('Infrastructure')

def type = "java"

def product = "bar"

def app = "api"

// Configure branches to sync with master branch
def branchesToSync = ['demo', 'ithc', 'perftest']

def vaultOverrides = [
    'preview': 'aat',
    'hmctsdemo': 'aat',

]

def secrets = [
    'bar-${env}': [
        secret('AppInsightsInstrumentationKey', 'APPINSIGHTS_INSTRUMENTATIONKEY')
    ]
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
    [ $class: 'AzureKeyVaultSecret',
      secretType: 'Secret',
      name: secretName,
      version: '',
      envVariable: envVar
    ]
}


withPipeline(type, product, app) {
    enableSlackNotifications('#bar-tech')
    enableAksStagingDeployment()


    after('functionalTest:aat') {
        steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/site/serenity/**/*'
        publishHTML target: [
            reportDir            : "api/target/site/serenity/",
            reportFiles          : "index.html",
            reportName           : "AAT Functional Tests",
            alwaysLinkToLastBuild: true
        ]

    }

    after('functionalTest:preview') {
        steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/site/serenity/**/*'
        publishHTML target: [
            reportDir            : "api/target/site/serenity/",
            reportFiles          : "index.html",
            reportName           : "Preview Functional Tests",
            alwaysLinkToLastBuild: true
        ]
    }

    disableLegacyDeployment()
    overrideVaultEnvironments(vaultOverrides)
    loadVaultSecrets(secrets)
    //Sync demo,ithc and perftest with master branch
    syncBranchesWithMaster(branchesToSync)
}
