plugins{
    id "info.solidsoft.pitest" version '1.3.0'
}
sourceSets {

    smokeTest {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir file('src/smokeTest/java')
        }
    }
    functionalTest {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir file('src/functionalTest/java')
        }
    }
}

apply plugin: 'idea'
idea {
    module {
        testSourceDirs += project.sourceSets.smokeTest.java.srcDirs
        testSourceDirs += project.sourceSets.smokeTest.resources.srcDirs
        testSourceDirs += project.sourceSets.functionalTest.java.srcDirs
        testSourceDirs += project.sourceSets.functionalTest.resources.srcDirs
    }
}

def versions = [
        pitest: '1.3.2',
        gradlePitest: '1.3.0',
        sonarPitest: '0.5'
]

sonarqube {
    properties {
        property "sonar.pitest.mode", "reuseReport"
        property "sonar.pitest.reportsDirectory", "build/reports/pitest"
    }
}
def javaLoggingVersion = '3.0.4'

dependencies {

    compile group: 'uk.gov.hmcts.reform', name: 'java-logging', version: javaLoggingVersion
  	compile group: 'uk.gov.hmcts.reform', name: 'java-logging-appinsights', version: javaLoggingVersion
  	compile group: 'uk.gov.hmcts.reform', name: 'java-logging-spring', version: javaLoggingVersion
    compile group: 'uk.gov.hmcts.reform', name: 'service-auth-provider-client', version: '1.0.1'

    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
    compile 'org.springframework.boot:spring-boot-starter-security'
    compile 'org.springframework.boot:spring-boot-starter-actuator'
    compile 'org.springframework.boot:spring-boot-starter-aop'
    compile group: 'org.ff4j', name: 'ff4j-spring-boot-web-api', version: '1.7.3'
    compile group: 'org.ff4j', name: 'ff4j-store-springjdbc', version: '1.7.3'
    compile group: 'org.springframework.hateoas', name: 'spring-hateoas', version: '0.25.0.RELEASE'
    compile group: 'com.google.guava', name: 'guava', version:'27.0-jre'


    compile 'org.liquibase:liquibase-core'
    compile(group: 'org.postgresql', name: 'postgresql') {
        exclude(module: 'commons-logging')
        exclude(module: 'slf4j-simple')
    }

    compile 'io.springfox:springfox-swagger2'
    compile 'io.springfox:springfox-swagger-ui'
    compile ('uk.gov.hmcts.reform.auth:auth-checker-lib') {
        exclude(module: 'java-logging-spring')
    }


    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
    compile 'com.fasterxml.jackson.core:jackson-annotations'
    compile 'com.google.guava:guava'
    compile 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    compile 'org.hibernate:hibernate-validator'
    compile 'commons-beanutils:commons-beanutils'

    testCompile(group: 'org.springframework.boot', name: 'spring-boot-starter-test') {
        exclude(module: 'commons-logging')
    }
    testCompile 'org.springframework.security:spring-security-test'
    testCompile 'org.hsqldb:hsqldb'

    testCompile group: 'io.rest-assured', name: 'rest-assured', version: '3.0.7'
    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile 'com.github.tomakehurst:wiremock:2.6.0'

    // smoke
    smokeTestCompile sourceSets.test.runtimeClasspath

    // functional
    functionalTestCompile sourceSets.test.runtimeClasspath

    compile group: 'org.pitest', name: 'pitest', version: '1.3.2'
    compile 'info.solidsoft.gradle.pitest:gradle-pitest-plugin:1.3.0'
    compile 'org.codehaus.sonar-plugins:sonar-pitest-plugin:0.5'

}

test {
    exclude '**/ComponentTestBase*'
}

task smokeTest(type: Test, description: 'Runs the smoke tests', group: 'Verification') {
    testClassesDirs = sourceSets.smokeTest.output.classesDirs
    classpath = sourceSets.smokeTest.runtimeClasspath
}

task functionalTest(type: Test, description: 'Runs the smoke functional', group: 'Verification') {
    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath
}

pitest {
    targetClasses = ['uk.gov.hmcts.bar.api.*']
    excludedClasses = ['uk.gov.hmcts.bar.api.configuration.*']
    threads = 10
    outputFormats = ['XML', 'HTML']
    timestampedReports = false
    mutationThreshold = 75
}
